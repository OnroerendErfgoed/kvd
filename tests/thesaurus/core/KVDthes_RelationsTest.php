<?php
// Call KVDthes_RelationsTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'KVDthes_RelationsTest::main');
}

require_once 'PHPUnit/Framework.php';

if ( !defined( 'KVD_AUTOLOAD')) {
    define( 'KVD_AUTOLOAD', '../../KVD_Autoload.php' );
}
require_once( KVD_AUTOLOAD );
spl_autoload_register( 'KVD_Autoload');

/**
 * Test class for KVDthes_Relations.
 * Generated by PHPUnit on 2008-02-13 at 16:43:24.
 */
class KVDthes_RelationsTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    KVDthes_Relations
     * @access protected
     */
    protected $object;

    protected $sessie;

    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('KVDthes_RelationsTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        $this->sessie = $this->getMock( 'KVDthes_Sessie' );
        $this->term = new KVDthes_TestTerm( $this->sessie, 0, 'TestTerm');
        $this->relation = new KVDthes_Relation( KVDthes_Relation::REL_RT , $this->term );
        $this->object = new KVDthes_Relations;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testAddRelation().
     */
    public function testAddRelation() {
        $this->assertEquals( $this->object->count( ), 0);
        $this->object->addRelation( $this->relation );
        $this->assertEquals( $this->object->count( ), 1);
    }

    public function testGetIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationsIterator', $this->object->getIterator( ) );
        $this->assertEquals( count( $this->object->getIterator( ) ), 1);
    }

    /**
     * @todo Implement testGetNTIterator().
     */
    public function testGetNTIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationTypeIterator', $this->object->getNTIterator( ) );
        $this->assertEquals( count( $this->object->getNTIterator( ) ), 0);
    }

    public function testGetBTIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationTypeIterator', $this->object->getBTIterator( ) );
        $this->assertEquals( count( $this->object->getBTIterator( ) ), 0);
    }

    public function testGetUSEIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationTypeIterator', $this->object->getUSEIterator( ) );
        $this->assertEquals( count( $this->object->getUSEIterator( ) ), 0);
    }

    public function testGetUFIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationTypeIterator', $this->object->getUFIterator( ) );
        $this->assertEquals( count( $this->object->getUFIterator( ) ), 0);
    }

    public function testGetRTIterator() {
        $this->object->addRelation( $this->relation );
        $this->assertType( 'KVDthes_RelationTypeIterator', $this->object->getRTIterator( ) );
        $this->assertEquals( count( $this->object->getRTIterator( ) ), 1);
    }

    public function testCount() {
        $this->assertEquals( $this->object->count( ), 0);
        $this->assertEquals( count( $this->object ), 0);
        $this->object->addRelation( $this->relation );
        $this->assertEquals( $this->object->count( ), 1);
        $this->assertEquals( count( $this->object ), 1);
    }
}

// Call KVDthes_RelationsTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'KVDthes_RelationsTest::main') {
    KVDthes_RelationsTest::main();
}
?>
